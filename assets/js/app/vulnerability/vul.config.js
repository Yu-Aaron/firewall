/**
 * vulnerability Config
 *
 * Description
 */
(function () {
    'use strict';

    angular
        .module('southWest.vul')
        .config(config);

    function config($stateProvider) {
        $stateProvider.state('vul', {
            parent: 'dashboard',
            abstract: true,
            controller: 'RuleCtrl as vul',
            templateUrl: 'templates/vulnerability/index.html',
            resolve: {
                state: function ($rootScope) {
                    $rootScope.currentState = 'POLICY';
                }
            }

        }).state('vul.blacklist', {
            url: '/vul/blacklist/?tab',
            controller: 'blacklistSignatureCtrl as signature',
            templateUrl: 'templates/rule/blacklist/index.html',
            resolve: {
                state: function ($rootScope) {
                    $rootScope.currentState = 'POLICY';
                },
                domainInfo: function (domain) {
                    return domain.getDomain();
                },
                deployedPolicyArr: function (Signature) {
                    return Signature.getDeployedPolicy("BLACKLIST").then(function (data) {
                        return data.data;
                    });
                },
                policiesArr: function (Signature) {
                    return Signature.getPolicies('BLACKLIST').then(function (data) {
                        return data.data;
                    });
                }
            }
        }).state('vul.blacklist.editor', {
            parent: 'vul',
            url: '/vul/blacklist/editor/:topologyId?policyId?tab',
            controller: 'blacklistEditorCtrl as editor',
            templateUrl: 'templates/rule/blacklist/editor.html',
            resolve: {
                state: function ($rootScope) {
                    $rootScope.currentState = 'POLICY';
                },
                domainInfo: function (domain) {
                    return domain.getDomain();
                },
                policiesArr: function (Signature) {
                    return Signature.getPolicies('BLACKLIST').then(function (data) {
                        return data.data;
                    });
                }
            }
        }).state('vul.blacklist.policyDetail', {
            parent: 'vul',
            url: '/vul/blacklist/policyDetail/:topologyId?policyId',
            controller: 'blacklistPolicyDetailCtrl as policyDetail',
            templateUrl: 'templates/rule/blacklist/policyDetail.html',
            resolve: {
                state: function ($rootScope) {
                    $rootScope.currentState = 'POLICY';
                }
            }
        });
    }
})();
